{
    "<alpha-value>": "<number> | <percentage>",
    "<anchor()>": "anchor( <anchor-element>? <anchor-side>, <length-percentage>? )",
    "<anchor-element>": "<dashed-ident> | implicit",
    "<anchor-side>": "inside | outside | top | left | right | bottom | start | end | self-start | self-end | <percentage> | center",
    "<anchor-size>": "width | height | block | inline | self-block | self-inline",
    "<angular-color-hint>": "<angle-percentage>",
    "<angular-color-stop-list>": "<angular-color-stop> , [ <angular-color-hint>? , <angular-color-stop> ]#",
    "<angular-color-stop>": "<color> <color-stop-angle>?",
    "<animateable-feature>": "scroll-position | contents | <custom-ident>",
    "<attachment>": "scroll | fixed | local",
    "<auto-repeat>": "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )",
    "<auto-track-list>": "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat> [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?",
    "<autospace>": "no-autospace | [ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ]",
    "<axis>": "block | inline | x | y",
    "<baseline-position>": "[ first | last ]? && baseline",
    "<basic-shape-rect>": "<inset()> | <rect()> | <xywh()>",
    "<bg-image>": "<image> | none",
    "<bg-layer>": "<bg-image> || <bg-position> [ \/ <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box>",
    "<bg-position>": "[ [ left | center | right | top | bottom | <length-percentage> ]| [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]| [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ]]",
    "<bg-size>": "[ <length-percentage [0,\u221e]> | auto ]{1,2} | cover | contain",
    "<cf-image>": "[ <image> | <color> ] && <percentage [0,100]>? ",
    "<circle()>": "circle( <radial-size>? [ at <position> ]?)",
    "<clip-source>": "<url>",
    "<color-base>": "<hex-color> | <color-function> | <named-color> | transparent",
    "<color-function>": "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <oklab()> | <oklch()> | <color()>",
    "<color-interpolation-method>": "in [ <rectangular-color-space> | <polar-color-space> <hue-interpolation-method>? ]",
    "<color-space>": "<rectangular-color-space> | <polar-color-space>",
    "<color-stop-angle>": "<angle-percentage>{1,2}",
    "<color-stop-length>": "<length-percentage>{1,2}",
    "<color-stop-list>": "<linear-color-stop> , [ <linear-color-hint>? , <linear-color-stop> ]#",
    "<color-stop>": "<color-stop-length> | <color-stop-angle>",
    "<color>": "<color-base> | currentColor | <system-color> ",
    "<colorspace-params>": "[ <predefined-rgb-params> | <xyz-params>]",
    "<compositing-operator>": "add | subtract | intersect | exclude",
    "<conic-gradient-syntax>": "[ [ [ from <angle> ]? [ at <position> ]? ] || <color-interpolation-method> ]? , <angular-color-stop-list>",
    "<container-condition>": "not <query-in-parens> | <query-in-parens> [ [ and <query-in-parens> ]* | [ or <query-in-parens> ]* ]",
    "<container-name>": "<custom-ident>",
    "<container-query>": "not <query-in-parens> | <query-in-parens> [ [ and <query-in-parens> ]* | [ or <query-in-parens> ]* ]",
    "<content-distribution>": "space-between | space-around | space-evenly | stretch",
    "<content-position>": "center | start | end | flex-start | flex-end",
    "<coord-box>": "<paint-box> | view-box",
    "<counter()>": "counter( <counter-name>, <counter-style>? )",
    "<counter>": "<counter()> | <counters()>",
    "<counters()>": "counters( <counter-name>, <string>, <counter-style>? )",
    "<display-box>": "contents | none",
    "<display-inside>": "flow | flow-root | table | flex | grid | ruby",
    "<display-internal>": "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container",
    "<display-legacy>": "inline-block | inline-table | inline-flex | inline-grid",
    "<display-listitem>": "<display-outside>? && [ flow | flow-root ]? && list-item",
    "<display-outside>": "block | inline | run-in",
    "<ellipse()>": "ellipse( <radial-size>? [ at <position> ]?)",
    "<explicit-track-list>": "[ <line-names>? <track-size> ]+ <line-names>?",
    "<feature-tag-value>": "<opentype-tag> [ <integer [0,\u221e]> | on | off ]?",
    "<filter-function>": "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>",
    "<filter-value-list>": "[ <filter-function> | <url> ]+",
    "<final-bg-layer>": "<bg-image> || <bg-position> [ \/ <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box> || <'background-color'>",
    "<fixed-breadth>": "<length-percentage>",
    "<fixed-repeat>": "repeat( [ <integer [1,\u221e]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )",
    "<fixed-size>": "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )",
    "<font-src>": "<url> [ format(<font-format>)]? [ tech( <font-tech>#)]? | local(<family-name>)",
    "<geometry-box>": "<shape-box> | fill-box | stroke-box | view-box",
    "<gradient>": "[ <linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()> | <repeating-conic-gradient()> ]",
    "<grid-line>": "auto | <custom-ident> | [ [ <integer [-\u221e,-1]> | <integer [1,\u221e]> ] && <custom-ident>? ] | [ span && [ <integer [1,\u221e]> || <custom-ident> ] ]",
    "<hue-interpolation-method>": "[ shorter | longer | increasing | decreasing ] hue",
    "<hue>": "<number> | <angle>",
    "<image-set()>": "image-set( <image-set-option># )",
    "<image-set-option>": "[ <image> | <string> ] [ <resolution> || type(<string>) ]?",
    "<image-src>": "[ <url> | <string> ]",
    "<image-tags>": "[ ltr | rtl ]",
    "<image>": "<url> | <image()> | <image-set()> | <cross-fade()> | <element()> | <gradient>",
    "<import-conditions>": "[ supports( [ <supports-condition> | <declaration> ] ) ]? <media-query-list>?",
    "<inflexible-breadth>": "<length-percentage> | min-content | max-content | auto",
    "<inset()>": "inset( <length-percentage>{1,4} [ round <'border-radius'> ]?)",
    "<inset-area>": "[ [ left | center | right | span-left | span-right | x-start | x-end | span-x-start | span-x-end | x-self-start | x-self-end | span-x-self-start | span-x-self-end | span-all ] || [ top | center | bottom | span-top | span-bottom | y-start | y-end | span-y-start | span-y-end | y-self-start | y-self-end | span-y-self-start | span-y-self-end | span-all ]| [ block-start | center | block-end | span-block-start | span-block-end | span-all ] || [ inline-start | center | inline-end | span-inline-start | span-inline-end | span-all ]| [ self-block-start | self-block-end | span-self-block-start | span-self-block-end | span-all ] || [ self-inline-start | self-inline-end | span-self-inline-start | span-self-inline-end | span-all ]| [ start | center | end | span-start | span-end | span-all ]{1,2}| [ self-start | center | self-end | span-self-start | span-self-end | span-all ]{1,2}]",
    "<keyframe-block>": "<keyframe-selector># { <declaration-list> }",
    "<keyframe-selector>": "from | to | <percentage [0,100]>",
    "<keyframes-name>": "<custom-ident> | <string>",
    "<layer-name>": "<ident> [ '.' <ident> ]* ",
    "<layout-box>": "<visual-box> | margin-box",
    "<leader-type>": "dotted | solid | space | <string>",
    "<legacy-hsl-syntax>": "hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )",
    "<legacy-hsla-syntax>": "hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )",
    "<legacy-rgb-syntax>": "rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )",
    "<legacy-rgba-syntax>": "rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )",
    "<line-name-list>": "[ <line-names> | <name-repeat> ]+",
    "<line-names>": "'[' <custom-ident>* ']'",
    "<line-style>": "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
    "<line-width>": "<length [0,\u221e]> | thin | medium | thick",
    "<linear-color-hint>": "<length-percentage>",
    "<linear-color-stop>": "<color> <length-percentage>?",
    "<linear-gradient()>": "linear-gradient( [ <linear-gradient-syntax> ] )",
    "<linear-gradient-syntax>": "[ [ <angle> | to <side-or-corner> ] || <color-interpolation-method> ]? , <color-stop-list>",
    "<mask-layer>": "<mask-reference> || <position> [ \/ <bg-size> ]? ||<repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>",
    "<mask-reference>": "none | <image> | <mask-source>",
    "<mask-source>": "<url>",
    "<masking-mode>": "alpha | luminance | match-source",
    "<modern-hsl-syntax>": "hsl( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ \/ [<alpha-value> | none] ]? )",
    "<modern-hsla-syntax>": "hsla( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ \/ [<alpha-value> | none] ]? )",
    "<modern-rgb-syntax>": "rgb( [ <number> | <percentage> | none]{3} [ \/ [<alpha-value> | none] ]? )",
    "<modern-rgba-syntax>": "rgba( [ <number> | <percentage> | none]{3} [ \/ [<alpha-value> | none] ]? )",
    "<name-repeat>": "repeat( [ <integer [1,\u221e]> | auto-fill ], <line-names>+)",
    "<offset-path>": "<ray()> | <url> | <basic-shape>",
    "<opentype-tag>": "<string>",
    "<overflow-position>": "unsafe | safe",
    "<page-selector-list>": "<page-selector>#",
    "<page-selector>": "[ <ident-token>? <pseudo-page>* ]!",
    "<paint-box>": "<visual-box> | fill-box | stroke-box",
    "<paint>": "none | <image> | <svg-paint>",
    "<path()>": "path( <'fill-rule'>? , <string>)",
    "<polar-color-space>": "hsl | hwb | lch | oklch",
    "<polygon()>": "polygon( <'fill-rule'>? , [<length-percentage> <length-percentage>]#)",
    "<predefined-rgb-params>": "<predefined-rgb> [ <number> | <percentage> | none ]{3}",
    "<predefined-rgb>": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020",
    "<pseudo-page>": "':' [ left | right | first | blank ]",
    "<pt-name-selector>": "'*' | <custom-ident>",
    "<query-in-parens>": "( <container-query> ) | ( <size-feature> ) | style( <style-query> ) | <general-enclosed>",
    "<quote>": "open-quote | close-quote | no-open-quote | no-close-quote",
    "<radial-extent>": "closest-corner | closest-side | farthest-corner | farthest-side",
    "<radial-gradient()>": "radial-gradient( [ <radial-gradient-syntax> ] )",
    "<radial-gradient-syntax>": "[ [ [ <radial-shape> || <radial-size> ]? [ at <position> ]? ] || <color-interpolation-method>]? , <color-stop-list>",
    "<radial-shape>": "circle | ellipse",
    "<radial-size>": "<radial-extent> | <length [0,\u221e]> | <length-percentage [0,\u221e]>{2}",
    "<ray-size>": "closest-side | closest-corner | farthest-side | farthest-corner | sides",
    "<rect()>": "rect( [ <length-percentage> | auto ]{4} [ round <'border-radius'> ]?)",
    "<rectangular-color-space>": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | lab | oklab | xyz | xyz-d50 | xyz-d65",
    "<repeat-style>": "repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}",
    "<reversed-counter-name>": "reversed( <counter-name> )",
    "<scroll()>": "scroll( [ <scroller> || <axis> ]? )",
    "<scroller>": "root | nearest | self",
    "<self-position>": "center | start | end | self-start | self-end | flex-start | flex-end",
    "<shadow>": "<color>? && [<length>{2} <length [0,\u221e]>? <length>?] && inset?",
    "<shape-box>": "<visual-box> | margin-box",
    "<side-or-corner>": "[left | right] || [top | bottom]",
    "<single-animation-timeline>": "auto | none | <dashed-ident> | <scroll()> | <view()>",
    "<spacing-trim>": "space-all | normal | trim-auto | trim-start | space-first | trim-all",
    "<style-condition>": "not <style-in-parens> | <style-in-parens> [ [ and <style-in-parens> ]* | [ or <style-in-parens> ]* ]",
    "<style-in-parens>": "( <style-query> ) | ( <style-feature> ) | <general-enclosed>",
    "<style-query>": "not <style-in-parens> | <style-in-parens> [ [ and <style-in-parens> ]* | [ or <style-in-parens> ]* ] | <style-feature>",
    "<svg-paint>": "child | child( <integer> )",
    "<target>": "<target-counter()> | <target-counters()> | <target-text()>",
    "<track-breadth>": "<length-percentage> | <flex> | min-content | max-content | auto",
    "<track-list>": "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?",
    "<track-repeat>": "repeat( [ <integer [1,\u221e]> ] , [ <line-names>? <track-size> ]+ <line-names>? )",
    "<track-size>": "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <length-percentage> )",
    "<transform-list>": "<transform-function>+",
    "<try-size>": "most-width | most-height | most-block-size | most-inline-size",
    "<try-tactic>": "flip-block || flip-inline || flip-start",
    "<visual-box>": "content-box | padding-box | border-box",
    "<xywh()>": "xywh( <length-percentage>{2} <length-percentage [0,\u221e]>{2} [ round <'border-radius'> ]?)",
    "<xyz-params>": "<xyz-space> [ <number> | <percentage> | none ]{3}",
    "<xyz-space>": "xyz | xyz-d50 | xyz-d65",
    "anchor-size()": "anchor-size( <anchor-element>? <anchor-size>, <length-percentage>? )",
    "color()": "color( <colorspace-params> [ \/ [ <alpha-value> | none ] ]? )",
    "conic-gradient()": "conic-gradient( [ <conic-gradient-syntax> ] )",
    "counter()": "counter( <counter-name>, <counter-style>? )",
    "counters()": "counters( <counter-name>, <string>, <counter-style>? )",
    "cross-fade()": "cross-fade( <cf-image># )",
    "hsl()": "[ <legacy-hsl-syntax> | <modern-hsl-syntax> ]",
    "hsla()": "[ <legacy-hsla-syntax> | <modern-hsla-syntax> ]",
    "image()": "image( <image-tags>? [ <image-src>? , <color>? ]! )",
    "leader()": "leader( <leader-type> )",
    "linear-gradient()": "linear-gradient( [ [ <angle> | to <side-or-corner> ] || <color-interpolation-method> ]? , <color-stop-list>)",
    "ray()": "ray( <angle> && <ray-size>? && contain? && [at <position>]? )",
    "rgb()": "[ <legacy-rgb-syntax> | <modern-rgb-syntax> ] ",
    "rgba()": "[ <legacy-rgba-syntax> | <modern-rgba-syntax> ] "
}